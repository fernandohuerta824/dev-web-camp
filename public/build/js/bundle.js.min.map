{"version":3,"sources":["tags.js"],"names":["tasgInput","document","querySelector","tagsDiv","tagsInputHidden","tagExito","setTimeout","remove","tags","value","split","actualizarInputHidden","toString","eliminarTag","e","tag","target","textContent","filter","t","mostrarTags","forEach","tagLi","createElement","classList","add","addEventListener","appendChild","keyCode","preventDefault","trim","concat"],"mappings":"CAAA,WACA,MAAAA,EAAAC,SAAAC,cAAA,eAEA,GAAAF,EAAA,CACA,MAAAG,EAAAF,SAAAC,cAAA,SACAE,EAAAH,SAAAC,cAAA,iBACAG,EAAAJ,SAAAC,cAAA,yBAEAG,GACAC,WAAA,IAAAD,EAAAE,SAAA,KAGA,IAAAC,EAAAJ,EAAAK,MAAAL,EAAAK,MAAAC,MAAA,KAAA,GAGA,SAAAC,IACAP,EAAAK,MAAAD,EAAAI,WAOA,SAAAC,EAAAC,GACA,MAAAC,EAAAD,EAAAE,OAAAC,YAEAT,EAAAA,EAAAU,QAAA,SAAAC,GACA,OAAAA,IAAAJ,KAEAD,EAAAE,OAAAT,SACAI,IAMA,SAAAS,IACAjB,EAAAc,YAAA,GAEAT,EAAAa,SAAA,SAAAN,GACA,MAAAO,EAAArB,SAAAsB,cAAA,MACAD,EAAAE,UAAAC,IAAA,mBACAH,EAAAL,YAAAF,EACAO,EAAAI,iBAAA,QAAAb,GACAV,EAAAwB,YAAAL,MA/BAF,IA2DApB,EAAA0B,iBAAA,YApBA,SAAAZ,GACA,GAAA,KAAAA,EAAAc,QACA,OAGAd,EAAAe,iBACA,MAAAd,EAAAf,EAAAS,MAAAqB,OAEAf,IAIAP,EAAAA,EAAAuB,OAAAhB,GACAK,IACAT,IAEAX,EAAAS,MAAA,QApEA","file":"bundle.js","sourcesContent":["(function() {\r\n    const tasgInput = document.querySelector('#tags-input');\r\n    \r\n    if(tasgInput) {\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]')\r\n        const tagExito = document.querySelector('.alerta.alerta--exito');\r\n\r\n        if(tagExito) {\r\n            setTimeout(() => tagExito.remove(), 5000);\r\n        }\r\n\r\n        let tags = !tagsInputHidden.value ? [] : tagsInputHidden.value.split(',');\r\n        mostrarTags();\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n        \r\n        /**\r\n         * Elimina un tag seleccionado.\r\n         * @param {Event} e Evento del clic.\r\n         */\r\n        function eliminarTag(e) {\r\n            const tag = e.target.textContent;\r\n        \r\n            tags = tags.filter(function(t) {\r\n                return t !== tag;\r\n            });\r\n            e.target.remove();\r\n            actualizarInputHidden();\r\n        }\r\n        \r\n        /**\r\n         * Muestra los tags en la interfaz.\r\n         */\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n        \r\n            tags.forEach(function(tag) {\r\n                const tagLi = document.createElement('LI');\r\n                tagLi.classList.add('formulario__tag');\r\n                tagLi.textContent = tag;\r\n                tagLi.addEventListener('click', eliminarTag);\r\n                tagsDiv.appendChild(tagLi);\r\n            });\r\n        }\r\n        \r\n        /**\r\n         * Guarda un tag al presionar una tecla espec√≠fica (coma en este caso).\r\n         * @param {Event} e Evento de teclado.\r\n         */\r\n        function guardarTag(e) {\r\n            if (e.keyCode !== 44) {\r\n                return;\r\n            }\r\n        \r\n            e.preventDefault();\r\n            const tag = tasgInput.value.trim();\r\n        \r\n            if (!tag) {\r\n                return;\r\n            }\r\n        \r\n            tags = tags.concat(tag);\r\n            mostrarTags();\r\n            actualizarInputHidden();\r\n        \r\n            tasgInput.value = '';\r\n        }\r\n        \r\n\r\n        tasgInput.addEventListener('keypress', guardarTag)\r\n    }\r\n})()"]}