{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","addEventListener","querySelector","categoria","dias","inputHiddenHora","busqueda","categoria_id","value","dia_id","buscarEventos","horaAnterior","seleccionarHora","e","id","target","dataset","horaId","console","log","classList","remove","add","async","Object","values","includes","url","resultado","fetch","datos","json","data","eventos","querySelectorAll","forEach","h","some","hora_id","removeEventListener","obtenerHoras","error","manejarBusqueda","name","ponentesInput","ponentes","ponentesFiltrados","tagExito","setTimeout","ponenteLista","ponenteInputHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","firstChild","removeChild","length","filter","p","cadena1","cadena2","normalizar","cadena","normalize","replace","toLowerCase","trim","includesNormalizado","nombre","noResultados","createElement","textContent","appendChild","ponenteLI","mostrarPonentes","ponentesArray","map","apellido","formatearPonentes","obtenerPonentes","tasgInput","tagsDiv","tagsInputHidden","tags","split","actualizarInputHidden","toString","eliminarTag","tag","t","mostrarTags","tagLi","keyCode","preventDefault","concat"],"mappings":"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","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    const horas = document.querySelector('#horas')\r\n\r\n    if(horas) {\r\n        const categoria = document.querySelector('#categoria');\r\n        const dias = document.querySelector('#dia');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora= document.querySelector('[name=\"hora_id\"]');\r\n\r\n        \r\n        let busqueda = {\r\n            categoria_id: +categoria.value,\r\n            dia_id: +dias.value\r\n        }\r\n\r\n        buscarEventos();\r\n        \r\n        /**\r\n         * \r\n         * @param {Event} e \r\n        */\r\n\r\n        let horaAnterior = null;\r\n        function seleccionarHora (e) {\r\n            const id = +e.target.dataset.horaId;\r\n            inputHiddenHora.value = id;\r\n            console.log(e.target)\r\n            if(horaAnterior)\r\n                horaAnterior.classList.remove('horas__hora--seleccionada');\r\n            horaAnterior = e.target;\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n            \r\n        }\r\n        \r\n        /**\r\n         * \r\n         * @param {Array<{id: int, categoria_id: int, dia_id: int, hora_id: int}>} eventos \r\n         */\r\n        function obtenerHoras(eventos) {\r\n            const horasDispo = document.querySelectorAll('.horas__hora');\r\n            horasDispo.forEach(h => {\r\n\r\n                if(!eventos.some(e => e.hora_id === +h.dataset.horaId)) {\r\n                    h.addEventListener('click', seleccionarHora);\r\n                    h.classList.remove('horas__hora--deshabilitada');\r\n                } else {\r\n                    h.classList.add('horas__hora--deshabilitada');\r\n                    h.classList.remove('horas__hora--seleccionada');\r\n                    h.removeEventListener('click', seleccionarHora)\r\n                    if(inputHiddenHora.value === h.dataset.horaId)\r\n                        inputHiddenHora.value = '';\r\n                }\r\n            })\r\n        }\r\n\r\n        async function buscarEventos() {\r\n            if(Object.values(busqueda).includes(0))\r\n                return;\r\n            try {\r\n                const url = `/api/eventos-horario?dia_id=${busqueda.dia_id}&categoria_id=${busqueda.categoria_id}`;\r\n                const resultado = await fetch(url);\r\n                const datos = await resultado.json();\r\n                const { data: eventos } = datos\r\n\r\n                obtenerHoras(eventos);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n            \r\n        }\r\n        /**\r\n         * \r\n         * @param {Event} e \r\n         */\r\n        function manejarBusqueda (e) {\r\n            busqueda[e.target.name] = +e.target.value;\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        categoria.addEventListener('change', manejarBusqueda)\r\n\r\n        dias.addEventListener('change', manejarBusqueda)\r\n    }\r\n})","document.addEventListener('DOMContentLoaded', () => {\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if(ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n        const tagExito = document.querySelector('.alerta.alerta--exito');\r\n\r\n        if(tagExito) {\r\n            setTimeout(() => tagExito.remove(), 5000);\r\n        }\r\n        const ponenteLista = document.querySelector('#listado-ponentes');\r\n        const ponenteInputHidden = document.querySelector('[name=\"ponente_id\"]')\r\n        \r\n        ponentesInput.addEventListener('input', buscarPonentes)\r\n\r\n\r\n        function includesNormalizado(cadena1, cadena2) {\r\n            const normalizar = cadena => \r\n                cadena.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').toLowerCase().trim();\r\n        \r\n            return normalizar(cadena1).includes(normalizar(cadena2));\r\n        }\r\n\r\n        /**\r\n         * \r\n         * @param {Event} e \r\n         */\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n\r\n            while(ponenteLista.firstChild) {\r\n                ponenteLista.removeChild(ponenteLista.firstChild)\r\n            }\r\n\r\n            if(busqueda.length < 3) \r\n                return;\r\n            ponentesFiltrados = ponentes.filter(p => includesNormalizado(p.nombre, busqueda)\r\n            );\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        /**\r\n         * \r\n         * @param {Event} e \r\n         */\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n\r\n            if(ponentePrevio)\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado')\r\n\r\n            ponenteInputHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n\r\n            if(ponentesFiltrados.length === 0) {\r\n                const noResultados = document.createElement('P');\r\n                noResultados.classList.add('listado-ponentes__no-resultado');\r\n                noResultados.textContent = 'No hay resultados para tu busqueda';\r\n                ponenteLista.appendChild(noResultados);\r\n            }\r\n\r\n            ponentesFiltrados.forEach(p => {\r\n                const ponenteLI = document.createElement('LI');\r\n                ponenteLI.classList.add('listado-ponentes__ponente')\r\n                ponenteLI.textContent = p.nombre;\r\n                ponenteLI.dataset.ponenteId = p.id;\r\n                ponenteLI.addEventListener('click', seleccionarPonente);\r\n                ponenteLista.appendChild(ponenteLI);\r\n            });\r\n        }\r\n        \r\n        async function obtenerPonentes() {\r\n            const url = '/api/ponentes';\r\n            const resultado = await fetch(url);\r\n            const datos = await resultado.json();\r\n            formatearPonentes(datos.data)\r\n        }\r\n        \r\n        \r\n        function formatearPonentes(ponentesArray = []) {\r\n            ponentes = ponentesArray.map(p => {\r\n                return {\r\n                    id: p.id,\r\n                    nombre: `${p.nombre.trim()} ${p.apellido}`\r\n                }\r\n            })\r\n\r\n            \r\n\r\n        }\r\n\r\n        obtenerPonentes();\r\n    }\r\n})","document.addEventListener('DOMContentLoaded', function() {\r\n    const tasgInput = document.querySelector('#tags-input');\r\n    \r\n    if(tasgInput) {\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]')\r\n        const tagExito = document.querySelector('.alerta.alerta--exito');\r\n\r\n        if(tagExito) {\r\n            setTimeout(() => tagExito.remove(), 5000);\r\n        }\r\n\r\n        let tags = !tagsInputHidden.value ? [] : tagsInputHidden.value.split(',');\r\n        mostrarTags();\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n        \r\n        /**\r\n         * Elimina un tag seleccionado.\r\n         * @param {Event} e Evento del clic.\r\n         */\r\n        function eliminarTag(e) {\r\n            const tag = e.target.textContent;\r\n        \r\n            tags = tags.filter(function(t) {\r\n                return t !== tag;\r\n            });\r\n            e.target.remove();\r\n            actualizarInputHidden();\r\n        }\r\n        \r\n        /**\r\n         * Muestra los tags en la interfaz.\r\n         */\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n        \r\n            tags.forEach(function(tag) {\r\n                const tagLi = document.createElement('LI');\r\n                tagLi.classList.add('formulario__tag');\r\n                tagLi.textContent = tag;\r\n                tagLi.addEventListener('click', eliminarTag);\r\n                tagsDiv.appendChild(tagLi);\r\n            });\r\n        }\r\n        \r\n        /**\r\n         * Guarda un tag al presionar una tecla específica (coma en este caso).\r\n         * @param {Event} e Evento de teclado.\r\n         */\r\n        function guardarTag(e) {\r\n            if (e.keyCode !== 44) {\r\n                return;\r\n            }\r\n        \r\n            e.preventDefault();\r\n            const tag = tasgInput.value.trim();\r\n        \r\n            if (!tag) {\r\n                return;\r\n            }\r\n        \r\n            tags = tags.concat(tag);\r\n            mostrarTags();\r\n            actualizarInputHidden();\r\n        \r\n            tasgInput.value = '';\r\n        }\r\n        \r\n\r\n        tasgInput.addEventListener('keypress', guardarTag)\r\n    }\r\n})"]}